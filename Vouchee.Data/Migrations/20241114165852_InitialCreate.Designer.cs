// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vouchee.Data.Helpers;

#nullable disable

namespace Vouchee.Data.Migrations
{
    [DbContext(typeof(VoucheeContext))]
    [Migration("20241114165852_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressBrand", b =>
                {
                    b.Property<Guid>("AddressesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AddressesId", "BrandsId");

                    b.HasIndex("BrandsId");

                    b.ToTable("AddressBrand");
                });

            modelBuilder.Entity("CategoryVoucher", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VouchersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "VouchersId");

                    b.HasIndex("VouchersId");

                    b.ToTable("CategoryVoucher");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsVerfied")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Lat")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<decimal?>("Lon")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("VerifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerfied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("VerifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Cart", b =>
                {
                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("BuyerId", "ModalId");

                    b.HasIndex("ModalId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("VoucherTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Modal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModalPromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginalPrice")
                        .HasColumnType("int");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModalPromotionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Modal");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.ModalPromotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MaxMoneyToDiscount")
                        .HasColumnType("int");

                    b.Property<int?>("MinMoneyToAppy")
                        .HasColumnType("int");

                    b.Property<int?>("MoneyDiscount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PercentDiscount")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ModalPromotion");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<string>("GiftEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PartnerTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UsedBalance")
                        .HasColumnType("int");

                    b.Property<int>("UsedVPoint")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("PartnerTransactionId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ModalDiscountMoney")
                        .HasColumnType("int");

                    b.Property<int>("ModalDiscountPercent")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModalPromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShopDiscountPercent")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShopPromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ModalId");

                    b.HasIndex("ModalPromotionId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShopPromotionId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.PartnerTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Accumulated")
                        .HasColumnType("int");

                    b.Property<int?>("AmountIn")
                        .HasColumnType("int");

                    b.Property<int?>("AmountOut")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartnerTransactionId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartnerTransaction");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.ShopPromotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PercentDiscount")
                        .HasColumnType("int");

                    b.Property<Guid?>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("ShopPromotion");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerfied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VerifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.TopUpRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TopUpRequest");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsibilityScore")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VPoint")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(10,5)");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.VoucherCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ModalId");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("VoucherCode");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.VoucherType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("VoucherType");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId")
                        .IsUnique()
                        .HasFilter("[BuyerId] IS NOT NULL");

                    b.HasIndex("SellerId")
                        .IsUnique()
                        .HasFilter("[SellerId] IS NOT NULL");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.WalletTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("AfterBalance")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BeforeBalance")
                        .HasColumnType("int");

                    b.Property<Guid?>("BuyerWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PartnerTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SellerWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TopUpRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerWalletId");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.HasIndex("PartnerTransactionId");

                    b.HasIndex("SellerWalletId");

                    b.HasIndex("TopUpRequestId")
                        .IsUnique()
                        .HasFilter("[TopUpRequestId] IS NOT NULL");

                    b.ToTable("WalletTransaction");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.WithdrawRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WithdrawRequest");
                });

            modelBuilder.Entity("AddressBrand", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryVoucher", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.Voucher", null)
                        .WithMany()
                        .HasForeignKey("VouchersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Cart", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "Buyer")
                        .WithMany("Carts")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.Modal", "Modal")
                        .WithMany("Carts")
                        .HasForeignKey("ModalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Modal");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Category", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.VoucherType", "VoucherType")
                        .WithMany("Categories")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoucherType");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Media", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("Medias")
                        .HasForeignKey("VoucherId");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Modal", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.ModalPromotion", "ModalPromotion")
                        .WithMany("Modals")
                        .HasForeignKey("ModalPromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.Voucher", "Voucher")
                        .WithMany("Modals")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModalPromotion");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Notification", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "Receiver")
                        .WithMany("ReceiverNotifications")
                        .HasForeignKey("ReceiverId");

                    b.HasOne("Vouchee.Data.Models.Entities.User", "Sender")
                        .WithMany("SenderNotifications")
                        .HasForeignKey("SenderId");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Order", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.PartnerTransaction", "PartnerTransaction")
                        .WithMany("Orders")
                        .HasForeignKey("PartnerTransactionId");

                    b.Navigation("Buyer");

                    b.Navigation("PartnerTransaction");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Modal", "Modal")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ModalId");

                    b.HasOne("Vouchee.Data.Models.Entities.ModalPromotion", "ModalPromotion")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ModalPromotionId");

                    b.HasOne("Vouchee.Data.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.ShopPromotion", "ShopPromotion")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ShopPromotionId");

                    b.Navigation("Modal");

                    b.Navigation("ModalPromotion");

                    b.Navigation("Order");

                    b.Navigation("ShopPromotion");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.ShopPromotion", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "Seller")
                        .WithMany("ShopPromotions")
                        .HasForeignKey("SellerId");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Supplier", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "User")
                        .WithOne("Supplier")
                        .HasForeignKey("Vouchee.Data.Models.Entities.Supplier", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.User", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Voucher", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Brand", "Brand")
                        .WithMany("Vouchers")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.User", "Seller")
                        .WithMany("Vouchers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.Supplier", "Supplier")
                        .WithMany("Vouchers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Seller");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.VoucherCode", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Modal", "Modal")
                        .WithMany("VoucherCodes")
                        .HasForeignKey("ModalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vouchee.Data.Models.Entities.OrderDetail", "OrderDetail")
                        .WithMany("VoucherCodes")
                        .HasForeignKey("OrderDetailId");

                    b.Navigation("Modal");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Wallet", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "Buyer")
                        .WithOne("BuyerWallet")
                        .HasForeignKey("Vouchee.Data.Models.Entities.Wallet", "BuyerId");

                    b.HasOne("Vouchee.Data.Models.Entities.User", "Seller")
                        .WithOne("SellerWallet")
                        .HasForeignKey("Vouchee.Data.Models.Entities.Wallet", "SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.WalletTransaction", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.Wallet", "BuyerWallet")
                        .WithMany("BuyerWalletTransactions")
                        .HasForeignKey("BuyerWalletId");

                    b.HasOne("Vouchee.Data.Models.Entities.Order", "Order")
                        .WithOne("WalletTransaction")
                        .HasForeignKey("Vouchee.Data.Models.Entities.WalletTransaction", "OrderId");

                    b.HasOne("Vouchee.Data.Models.Entities.PartnerTransaction", "PartnerTransaction")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("PartnerTransactionId");

                    b.HasOne("Vouchee.Data.Models.Entities.Wallet", "SellerWallet")
                        .WithMany("SellerWalletTransactions")
                        .HasForeignKey("SellerWalletId");

                    b.HasOne("Vouchee.Data.Models.Entities.TopUpRequest", "TopUpRequest")
                        .WithOne("WalletTransaction")
                        .HasForeignKey("Vouchee.Data.Models.Entities.WalletTransaction", "TopUpRequestId");

                    b.Navigation("BuyerWallet");

                    b.Navigation("Order");

                    b.Navigation("PartnerTransaction");

                    b.Navigation("SellerWallet");

                    b.Navigation("TopUpRequest");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.WithdrawRequest", b =>
                {
                    b.HasOne("Vouchee.Data.Models.Entities.User", "User")
                        .WithMany("WithdrawRequests")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Brand", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Modal", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");

                    b.Navigation("VoucherCodes");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.ModalPromotion", b =>
                {
                    b.Navigation("Modals");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("WalletTransaction");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.OrderDetail", b =>
                {
                    b.Navigation("VoucherCodes");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.PartnerTransaction", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.ShopPromotion", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.TopUpRequest", b =>
                {
                    b.Navigation("WalletTransaction");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.User", b =>
                {
                    b.Navigation("BuyerWallet");

                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("ReceiverNotifications");

                    b.Navigation("SellerWallet");

                    b.Navigation("SenderNotifications");

                    b.Navigation("ShopPromotions");

                    b.Navigation("Supplier");

                    b.Navigation("Vouchers");

                    b.Navigation("WithdrawRequests");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Voucher", b =>
                {
                    b.Navigation("Medias");

                    b.Navigation("Modals");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.VoucherType", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Vouchee.Data.Models.Entities.Wallet", b =>
                {
                    b.Navigation("BuyerWalletTransactions");

                    b.Navigation("SellerWalletTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
